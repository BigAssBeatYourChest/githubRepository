<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baizhi.dao.PersonDao">
    <!-- Person的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Person_Map" type="com.baizhi.entity.Person">
        <id column="ID" property="id" />
        <result column="NAME" property="name" />
        <result column="PASSWORD" property="password" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:T_PERSON的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="T_PERSON_Column">
        T_PERSON.ID as ID
        ,T_PERSON.NAME as NAME
        ,T_PERSON.PASSWORD as PASSWORD
    </sql>

    <!--获得类名为:Person对应的数据库表的数据总行数 -->
    <select id="getPersonRowCount" parameterType="com.baizhi.common.Assist" resultType="java.lang.Long">
        select count(ID) from T_PERSON
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:Person对应数据库中表的数据集合 -->
    <select id="selectPerson" parameterType="com.baizhi.common.Assist" resultMap="result_Person_Map">
        select * from
        (
            select  rownum as page,result.* from
            (
                select  <if test="distinct !=null">${distinct}</if>
                <choose>
            	       <when test="resultColumn!=null">${resultColumn}</when>
            	       <otherwise>
                <include refid="T_PERSON_Column" /> 
            	       </otherwise>
                </choose>
                from T_PERSON 

                <if test="require!=null"><include refid="Assist" /></if>
                <if test="order !=null">${order}</if>
            ) result 
            <if test="rowSize!=null">where rownum &lt;= <if test="startRow!=null">#{startRow}+</if>#{rowSize}</if>
        )
        <if test="startRow!=null">where page &gt; #{startRow} </if>
    </select> 

    <!-- 获得一个Person对象,以参数Person对象中不为空的属性作为条件进行查询-->
    <select id="selectPersonByObj" parameterType="com.baizhi.entity.Person" resultMap="result_Person_Map">
        select 
            <include refid="T_PERSON_Column" /> 
        from T_PERSON
        <where>
            <if test="password != null "> and T_PERSON.PASSWORD = #{password}</if>
            <if test="name != null "> and T_PERSON.NAME = #{name}</if>
            <if test="id != null "> and T_PERSON.ID = #{id}</if>
        </where>
    </select> 

    <!-- 通过Person的id获得对应数据库中表的数据对象-->
    <select id="selectPersonById" parameterType="java.lang.Integer" resultMap="result_Person_Map">
        select 
            <include refid="T_PERSON_Column" /> 
        from T_PERSON
        where T_PERSON.ID = #{id}
    </select> 

    <!-- 将Person插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertPerson" parameterType="com.baizhi.entity.Person">
        insert into T_PERSON(ID,NAME,PASSWORD) 
        values(#{id},#{name},#{password})
    </insert>

    <!-- 将Person中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyPerson" parameterType="com.baizhi.entity.Person">
        insert into T_PERSON
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">ID,</if>
            <if test="name != null">NAME,</if>
            <if test="password != null">PASSWORD,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="name != null"> #{name},</if>
            <if test="password != null"> #{password},</if>
        </trim>
    </insert>

    <!-- 通过Person的id将数据库表中对应的数据删除-->
    <delete id="deletePersonById" parameterType="java.lang.Integer">
        delete from T_PERSON
        where ID = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将Person对应的数据库表的数据删除-->
    <delete id="deletePerson" parameterType="com.baizhi.common.Assist">
        delete from T_PERSON
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过Person的id将Person的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updatePersonById" parameterType="com.baizhi.entity.Person">
        update T_PERSON set
            NAME=#{name}
            ,PASSWORD=#{password}
        where ID=#{id}
    </update>

    <!-- 通过Person的id将Person中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyPersonById" parameterType="com.baizhi.entity.Person">
        update T_PERSON
        <set>
            <if test="name != null">
                NAME=#{name},
            </if>
            <if test="password != null">
                PASSWORD=#{password},
            </if>
        </set>
        where ID=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将Person中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updatePerson" parameterType="map">
        update T_PERSON
        <set>
                ID=#{enti.id},
                NAME=#{enti.name},
                PASSWORD=#{enti.password},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将Person中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyPerson" parameterType="map">
        update T_PERSON
        <set>
            <if test="enti.id != null">
                ID=#{enti.id},
            </if>
            <if test="enti.name != null">
                NAME=#{enti.name},
            </if>
            <if test="enti.password != null">
                PASSWORD=#{enti.password},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>