<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baizhi.dao.Person2Dao">
    <!-- Person2的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Person2_Map" type="com.baizhi.entity.Person2">
        <id column="ID" property="id" />
        <result column="NAME" property="name" />
        <result column="SALARY" property="salary" />
        <result column="AGE" property="age" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:T_PERSON2的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="T_PERSON2_Column">
        T_PERSON2.ID as ID
        ,T_PERSON2.NAME as NAME
        ,T_PERSON2.SALARY as SALARY
        ,T_PERSON2.AGE as AGE
    </sql>

    <!--获得类名为:Person2对应的数据库表的数据总行数 -->
    <select id="getPerson2RowCount" parameterType="com.common.Assist" resultType="java.lang.Long">
        select count(ID) from T_PERSON2
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:Person2对应数据库中表的数据集合 -->
    <select id="selectPerson2" parameterType="com.common.Assist" resultMap="result_Person2_Map">
        select * from
        (
            select  rownum as page,result.* from
            (
                select  <if test="distinct !=null">${distinct}</if>
                <choose>
            	       <when test="resultColumn!=null">${resultColumn}</when>
            	       <otherwise>
                <include refid="T_PERSON2_Column" /> 
            	       </otherwise>
                </choose>
                from T_PERSON2 

                <if test="require!=null"><include refid="Assist" /></if>
                <if test="order !=null">${order}</if>
            ) result 
            <if test="rowSize!=null">where rownum &lt;= <if test="startRow!=null">#{startRow}+</if>#{rowSize}</if>
        )
        <if test="startRow!=null">where page &gt; #{startRow} </if>
    </select> 

    <!-- 获得一个Person2对象,以参数Person2对象中不为空的属性作为条件进行查询-->
    <select id="selectPerson2ByObj" parameterType="com.baizhi.entity.Person2" resultMap="result_Person2_Map">
        select 
            <include refid="T_PERSON2_Column" /> 
        from T_PERSON2
        <where>
            <if test="age != null "> and T_PERSON2.AGE = #{age}</if>
            <if test="salary != null "> and T_PERSON2.SALARY = #{salary}</if>
            <if test="name != null "> and T_PERSON2.NAME = #{name}</if>
            <if test="id != null "> and T_PERSON2.ID = #{id}</if>
        </where>
    </select> 

    <!-- 通过Person2的id获得对应数据库中表的数据对象-->
    <select id="selectPerson2ById" parameterType="java.lang.Integer" resultMap="result_Person2_Map">
        select 
            <include refid="T_PERSON2_Column" /> 
        from T_PERSON2
        where T_PERSON2.ID = #{id}
    </select> 

    <!-- 将Person2插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertPerson2" parameterType="com.baizhi.entity.Person2">
        insert into T_PERSON2(ID,NAME,SALARY,AGE) 
        values(#{id},#{name},#{salary},#{age})
    </insert>

    <!-- 将Person2中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyPerson2" parameterType="com.baizhi.entity.Person2">
        insert into T_PERSON2
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            <if test="name != null">NAME,</if>
            <if test="salary != null">SALARY,</if>
            <if test="age != null">AGE,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            SEQ_IMG.nextval,
            <if test="name != null"> #{name},</if>
            <if test="salary != null"> #{salary},</if>
            <if test="age != null"> #{age},</if>
        </trim>
    </insert>

    <!-- 通过Person2的id将数据库表中对应的数据删除-->
    <delete id="deletePerson2ById" parameterType="java.lang.Integer">
        delete from T_PERSON2
        where ID = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将Person2对应的数据库表的数据删除-->
    <delete id="deletePerson2" parameterType="com.common.Assist">
        delete from T_PERSON2
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过Person2的id将Person2的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updatePerson2ById" parameterType="com.baizhi.entity.Person2">
        update T_PERSON2 set
            NAME=#{name}
            ,SALARY=#{salary}
            ,AGE=#{age}
        where ID=#{id}
    </update>

    <!-- 通过Person2的id将Person2中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyPerson2ById" parameterType="com.baizhi.entity.Person2">
        update T_PERSON2
        <set>
            <if test="name != null">
                NAME=#{name},
            </if>
            <if test="salary != null">
                SALARY=#{salary},
            </if>
            <if test="age != null">
                AGE=#{age},
            </if>
        </set>
        where ID=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将Person2中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updatePerson2" parameterType="map">
        update T_PERSON2
        <set>
                ID=#{enti.id},
                NAME=#{enti.name},
                SALARY=#{enti.salary},
                AGE=#{enti.age},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将Person2中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyPerson2" parameterType="map">
        update T_PERSON2
        <set>
            <if test="enti.id != null">
                ID=#{enti.id},
            </if>
            <if test="enti.name != null">
                NAME=#{enti.name},
            </if>
            <if test="enti.salary != null">
                SALARY=#{enti.salary},
            </if>
            <if test="enti.age != null">
                AGE=#{enti.age},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>